<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hpedu.core.teacher.dao.TeacherMapper">
	<resultMap id="BaseResultMap" type="com.hpedu.core.teacher.pojo.Teacher">
		<id column="tid" property="tid" jdbcType="VARCHAR" />		
		<result column="tname" property="tname" jdbcType="VARCHAR" />
		<result column="tintro" property="tintro" jdbcType="VARCHAR" />
		<result column="timgUrl" property="timgUrl" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="VARCHAR" />
		<result column="subject" property="subject" jdbcType="VARCHAR" />
		<result column="backImg" property="backImg" jdbcType="VARCHAR" />
		<result column="nums" property="nums" jdbcType="INTEGER" />
		<result column="isShow" property="isShow" jdbcType="INTEGER" />
	</resultMap>
	<select id="findTeacherByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
	select * from teacher t <if test="isShow!=null"> where t.isShow is null or t.isShow=1 </if> order by sort <if test="limit!=null"> limit #{limit}</if> 
	</select>
	<select id="findAllTeacher" parameterType="java.util.Map" resultMap="BaseResultMap">
	select *,(select count(1) from userscore s where 1=1  and s.teacherName=t.tname and (s.isHasJDT=1 or s.isHasJDT=2) and s.gotScore is null)as nums from teacher t <if test="isShow!=null"> where t.isShow is null or t.isShow=1 </if> order by sort  
	</select>
	<select id="searchTeacherListCount" parameterType="java.util.Map" resultType="java.lang.Integer" >
	  select count(1) from teacher t <if test="isShow!=null"> where t.isShow is null or t.isShow=1 </if>
	</select>
	
	<select id="findTeacherById" parameterType="java.lang.String" resultMap="BaseResultMap">
	select * from teacher where tid=#{0}
	</select>
	<select id="findTeacherByName" parameterType="java.lang.String" resultMap="BaseResultMap">
	select * from teacher where tname=#{0} limit 1
	</select>
	<update id="updateTeacher" parameterType="com.hpedu.core.teacher.pojo.Teacher">
	update teacher t set t.tname = #{tname},t.tintro=#{tintro},subject=#{subject}
	<if test="timgUrl!=null">
	 ,t.timgUrl = #{timgUrl}
	</if>
	<if test="backImg!=null">
	 ,t.backImg = #{backImg}
	</if>
	where  t.tid = #{tid}
	</update>
	<delete id="deleteTeacherById" parameterType="java.lang.String">
	delete from teacher where tid=#{0}
	</delete>
	<insert id="addTeacher" parameterType="com.hpedu.core.teacher.pojo.Teacher">
	insert into teacher(tid,tname,tintro<if test="timgUrl!=null ">,timgUrl</if><if test="backImg !=null ">,backImg</if>,sort,subject,isShow)values(#{tid},#{tname},#{tintro}<if test="timgUrl!=null ">,#{timgUrl}</if><if test="backImg!=null ">,#{backImg}</if>,#{sort},#{subject},1)
	</insert>
	<update id="updateTeacherSort" parameterType="hashmap">
	  update teacher set sort=#{1} where tid=#{0}
	</update>
</mapper>